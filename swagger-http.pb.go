// Code generated by protoc-gen-go.
// source: swagger-http.proto
// DO NOT EDIT!

/*
Package SwaggerHTTPGRPC is a generated protocol buffer package.

It is generated from these files:
	swagger-http.proto

It has these top-level messages:
	Request
	Response
	Header
*/
package SwaggerHTTPGRPC

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Url     string            `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Method  string            `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	Body    string            `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Request) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Request) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Request) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Response struct {
	Ok         bool               `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Url        string             `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Status     int32              `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	StatusText string             `protobuf:"bytes,4,opt,name=statusText" json:"statusText,omitempty"`
	Body       string             `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	Headers    map[string]*Header `protobuf:"bytes,6,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Response) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Response) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Response) GetStatusText() string {
	if m != nil {
		return m.StatusText
	}
	return ""
}

func (m *Response) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Response) GetHeaders() map[string]*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Header struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Header) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "SwaggerHTTPGRPC.Request")
	proto.RegisterType((*Response)(nil), "SwaggerHTTPGRPC.Response")
	proto.RegisterType((*Header)(nil), "SwaggerHTTPGRPC.Header")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Workers service

type WorkersClient interface {
	// Work on a Request
	DoRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type workersClient struct {
	cc *grpc.ClientConn
}

func NewWorkersClient(cc *grpc.ClientConn) WorkersClient {
	return &workersClient{cc}
}

func (c *workersClient) DoRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/SwaggerHTTPGRPC.Workers/DoRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Workers service

type WorkersServer interface {
	// Work on a Request
	DoRequest(context.Context, *Request) (*Response, error)
}

func RegisterWorkersServer(s *grpc.Server, srv WorkersServer) {
	s.RegisterService(&_Workers_serviceDesc, srv)
}

func _Workers_DoRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkersServer).DoRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SwaggerHTTPGRPC.Workers/DoRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkersServer).DoRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Workers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SwaggerHTTPGRPC.Workers",
	HandlerType: (*WorkersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoRequest",
			Handler:    _Workers_DoRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "swagger-http.proto",
}

func init() { proto.RegisterFile("swagger-http.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x52, 0x41, 0x4f, 0xf2, 0x40,
	0x14, 0xfc, 0xba, 0x85, 0x02, 0x8f, 0x2f, 0x6a, 0x36, 0x06, 0x2b, 0x07, 0x42, 0x48, 0x34, 0x24,
	0x86, 0x1e, 0xf0, 0x62, 0xb8, 0x68, 0x50, 0x23, 0x17, 0x13, 0xb2, 0x90, 0x70, 0x2e, 0xe1, 0x05,
	0x92, 0x22, 0x8b, 0xbb, 0x5b, 0xb5, 0xbf, 0xc2, 0xff, 0xe0, 0x6f, 0xf1, 0x87, 0x99, 0xee, 0xb6,
	0xb4, 0xa9, 0x10, 0x6f, 0xf3, 0x26, 0x9d, 0xd7, 0x99, 0xd9, 0x07, 0x54, 0xbe, 0xfb, 0xcb, 0x25,
	0x8a, 0xde, 0x4a, 0xa9, 0xad, 0xb7, 0x15, 0x5c, 0x71, 0x7a, 0x3c, 0x31, 0xdc, 0x68, 0x3a, 0x1d,
	0x3f, 0xb1, 0xf1, 0x7d, 0xe7, 0xdb, 0x82, 0x0a, 0xc3, 0xd7, 0x10, 0xa5, 0xa2, 0x27, 0x60, 0x87,
	0x62, 0xed, 0x5a, 0x6d, 0xab, 0x5b, 0x63, 0x31, 0xa4, 0xb7, 0x50, 0x59, 0xa1, 0xbf, 0x40, 0x21,
	0x5d, 0xd2, 0xb6, 0xbb, 0xf5, 0xfe, 0x85, 0x57, 0x58, 0xe0, 0x25, 0x62, 0x6f, 0x64, 0xbe, 0x7b,
	0xdc, 0x28, 0x11, 0xb1, 0x54, 0x45, 0x1b, 0xe0, 0xbc, 0xa0, 0x5a, 0xf1, 0x85, 0x6b, 0xeb, 0xad,
	0xc9, 0x44, 0x29, 0x94, 0xe6, 0x7c, 0x11, 0xb9, 0x25, 0xcd, 0x6a, 0xdc, 0x1c, 0xc0, 0xff, 0xfc,
	0x92, 0xd8, 0x4e, 0x80, 0x51, 0x6a, 0x27, 0xc0, 0x88, 0x9e, 0x42, 0xf9, 0xcd, 0x5f, 0x87, 0xe8,
	0x12, 0xcd, 0x99, 0x61, 0x40, 0x6e, 0xac, 0xce, 0x27, 0x81, 0x2a, 0x43, 0xb9, 0xe5, 0x1b, 0x89,
	0xf4, 0x08, 0x08, 0x0f, 0xb4, 0xae, 0xca, 0x08, 0x0f, 0xd2, 0x5c, 0x24, 0xcb, 0xd5, 0x00, 0x47,
	0x2a, 0x5f, 0x85, 0x52, 0xdb, 0x2a, 0xb3, 0x64, 0xa2, 0x2d, 0x00, 0x83, 0xa6, 0xf8, 0xa1, 0x12,
	0x73, 0x39, 0x66, 0x67, 0xbb, 0x9c, 0xd9, 0xa6, 0x77, 0x59, 0x47, 0x8e, 0xee, 0xe8, 0x72, 0x4f,
	0x47, 0xc6, 0xd9, 0xfe, 0x92, 0x9a, 0x93, 0x3f, 0x83, 0xf7, 0xf2, 0xc1, 0xeb, 0xfd, 0xb3, 0x5f,
	0x7f, 0x30, 0xfa, 0x7c, 0x23, 0x2d, 0x70, 0x0c, 0x99, 0xb5, 0x66, 0xb5, 0xed, 0x5d, 0x6b, 0xfd,
	0x67, 0xa8, 0xcc, 0xb8, 0x08, 0xe2, 0x47, 0x1a, 0x42, 0xed, 0x81, 0xa7, 0x47, 0xe0, 0x1e, 0x7a,
	0xe1, 0xe6, 0xf9, 0xc1, 0x5c, 0x9d, 0x7f, 0xc3, 0x2b, 0x28, 0x9e, 0xd6, 0xb0, 0x48, 0x7c, 0x11,
	0x67, 0x32, 0x8b, 0xc1, 0xdc, 0xd1, 0xc7, 0x78, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x32, 0x23,
	0x38, 0x5e, 0xa2, 0x02, 0x00, 0x00,
}
